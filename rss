<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Docker Docs]]></title>
        <description><![CDATA[This is the best book ever.]]></description>
        <link>https://smoothies.com.cn/docker-docs/</link>
        <generator>RSS for Node</generator>
        <lastBuildDate>Wed, 22 Feb 2023 09:18:10 GMT</lastBuildDate>
        <atom:link href="http://smoothies.com.cn/rss" rel="self" type="application/rss+xml"/>
        <author><![CDATA[Zong Xun]]></author>
        <managingEditor><![CDATA[writer@smoothies.com.cn (Zong Xun)]]></managingEditor>
        <webMaster><![CDATA[webmaster@smoothies.com.cn (Zong Xun)]]></webMaster>
        <category><![CDATA[python]]></category>
        <item>
            <title><![CDATA[Summary]]></title>
            <link>https://smoothies.com.cn/docker-docs/Overview.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Overview.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[序言]]></title>
            <description><![CDATA[这是一本关于集合 docker 的书。]]></description>
            <link>https://smoothies.com.cn/docker-docs/</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker-compose overview]]></title>
            <description><![CDATA[docker-ompose 是一个用于定义和运行多容器 Docker 应用程序的工具。使用 docker-compose，您可以使用 YAML 文件来配置应用程序的服务。然后，使用一个命令，您可以从您的配置中创建并启动所有服务。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Compose/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Compose/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker-compose 安装]]></title>
            <description><![CDATA[Linux
Linux 上我们可以从 Github 上下载它的二进制包来使用，最新发行的版本地址：https://github.com/docker/compose/releases。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Compose/docker-compose_1_install.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Compose/docker-compose_1_install.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker-compose 安装 elasticsearch 集群]]></title>
            <description><![CDATA[在这里插入图片描述]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Compose/docker-compose_install_2_elasticsearch.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Compose/docker-compose_install_2_elasticsearch.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Swarm 介绍]]></title>
            <description><![CDATA[Docker Swarm 解释： Docker Swarm 是一组物理机或虚拟机，它们运行 Docker 应用程序并已配置为加入集群。将一组机器集群在一起后，您仍然可以运行您习惯的 Docker 命令，但它们现在将由集群中的机器执行。集群的活动由 swarm manager 控制，加入集群的机器称为节点。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Swarm/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Swarm/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Swarm 快速入门]]></title>
            <description><![CDATA[将单主机Docker主机转换为多主机Docker swarm集群模式。默认情况下，Docker作为一个隔离的单节点工作。所有容器仅部署在引擎上。群模式将它变成了一个多主机集群感知引擎。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_1_start.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_1_start.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Swarm 网络]]></title>
            <description><![CDATA[默认情况下，Docker作为一个隔离的单节点工作。所有容器仅部署在引擎上。群模式将它变成了一个多主机集群感知引擎。
初始化集群]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_2_network.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_2_network.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker swam 集群实现负载均衡]]></title>
            <description><![CDATA[第一个节点（manager）：]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_3_load_balancing.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_3_load_balancing.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Swarm 创建加密覆盖网络]]></title>
            <description><![CDATA[默认情况下，Docker作为一个隔离的单节点工作。所有容器仅部署在引擎上。Swarm Mode将它变成了一个多主机集群感知引擎。为了使用秘密功能，Docker必须处于“群模式”。这是通过]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_4_encrypted_network.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_4_encrypted_network.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker swarm 管理 secrets]]></title>
            <description><![CDATA[@[toc]]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_5_secrets.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_5_secrets.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Swarm 健康检查]]></title>
            <description><![CDATA[新的Healthcheck功能是作为Dockerfile的扩展创建的，并在构建Docker映像时定义。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_6_healthcheck.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_6_healthcheck.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Dcoker Swarm 更新]]></title>
            <description><![CDATA[服务可以动态更新，以控制各种设置和选项。在内部，Docker管理如何应用更新。对于某些命令，Docker将停止、删除和重新创建容器。对于管理连接和正常运行时间来说，让所有容器一次性停止是一个重要的考虑因素。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_7_update.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_7_update.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Swarm 部署界面 UI Portainer]]></title>
            <description><![CDATA[第一台机器：]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_8_UI_Portainer.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_8_UI_Portainer.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker swarm 通过 docker-compose 部署应用]]></title>
            <description><![CDATA[默认情况下，Docker作为一个隔离的单节点工作。所有容器仅部署在引擎上。群模式将它变成了一个多主机集群感知引擎。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_9_docker-compose_deploy_app.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_9_docker-compose_deploy_app.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Swarm 维护模式]]></title>
            <description><![CDATA[第一台执行：]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_10_maintenance_mode.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker-Swarm/docker_swarm_10_maintenance_mode.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Overview]]></title>
            <description><![CDATA[Docker 是一个用于开发、发布和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分离，以便您可以快速交付软件。使用 Docker，您可以像管理应用程序一样管理基础设施。通过利用 Docker 快速交付、测试和部署代码的方法，您可以显着减少编写代码和在生产环境中运行之间的延迟。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker CI/CD Overiview]]></title>
            <description><![CDATA[根据2020 年 Jetbrains 开发人员调查，44% 的开发人员现在正在使用某种形式的 Docker 容器持续集成和部署。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/CICD/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/CICD/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker + makefile =CI Pipeline]]></title>
            <description><![CDATA[我希望我所有的项目都能像这样工作：]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/CICD/docker_makefile_CI_Pipeline.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/CICD/docker_makefile_CI_Pipeline.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[GitHub Action 构建镜像]]></title>
            <link>https://smoothies.com.cn/docker-docs/Docker/CICD/docker_GitHub_Action_builds_image.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/CICD/docker_GitHub_Action_builds_image.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[自托管构建：如何使用 Harbor 搭建企业级镜像仓库？]]></title>
            <link>https://smoothies.com.cn/docker-docs/Docker/CICD/docker_deploy_enterprise-level_harbor.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/CICD/docker_deploy_enterprise-level_harbor.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[自托管构建：如何使用 Tekton 构建镜像？]]></title>
            <description><![CDATA[
]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/CICD/docker_Tekton_builds_image.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/CICD/docker_Tekton_builds_image.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[如何使用 GitLab CI 构建镜像？]]></title>
            <link>https://smoothies.com.cn/docker-docs/Docker/CICD/docker_GitLab_CI_builds_image.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/CICD/docker_GitLab_CI_builds_image.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker 命令]]></title>
            <description><![CDATA[dockerhub官网：https://hub.docker.com/
prometheus镜像为示例]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Command/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Command/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker inspect --format]]></title>
            <description><![CDATA[Docker --format 参数提供了基于 Go模板 的日志格式化输出辅助功能，并提供了一些内置的增强函数。
在这里插入图片描述]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Command/docker_command_inspect.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Command/docker_command_inspect.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Dockerfile 编排]]></title>
            <description><![CDATA[FROM指令用于指定其后构建新镜像所使用的基础镜像。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Dockerfile/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Dockerfile/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker 镜像 overview]]></title>
            <description><![CDATA[Docker 镜像是用于在 Docker 容器中执行代码的文件。Docker  镜像充当构建 Docker容器的一组指令，就像模板一样。使用 Docker 时，Docker 镜像也可以作为起点。 镜像相当于虚拟机 (VM) 环境中的快照。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Image/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Image/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[构建镜像开源工具 buildah]]></title>
            <description><![CDATA[tags: images
在这里插入图片描述]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Image/build_images_with_buildah.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Image/build_images_with_buildah.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[如何为不同语言快速构建多平台镜像]]></title>
            <link>https://smoothies.com.cn/docker-docs/Docker/Image/docker_Build_multi-platform_image.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Image/docker_Build_multi-platform_image.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[如何将镜像体积缩减 90%？]]></title>
            <link>https://smoothies.com.cn/docker-docs/Docker/Image/docker_Image_volume_reduced.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Image/docker_Image_volume_reduced.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker 镜像源]]></title>
            <description><![CDATA[这里采用了阿里云的镜像加速器（需要阿里云账号进行登录），地址：阿里云 -> 容器镜像服务 -> 镜像工具 -> 镜像加速器。
在这里插入图片描述]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Image/docker_image_1_library.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Image/docker_image_1_library.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker 镜像管理]]></title>
            <description><![CDATA[dockerhub官网：https://hub.docker.com/
prometheus镜像为示例]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Image/docker_image_2_manage.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Image/docker_image_2_manage.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Install Overview]]></title>
            <description><![CDATA[Docker Engine 可通过 Docker Desktop 在各种Linux 平台、 macOS和Windows 10 上使用，并且可以作为静态二进制安装使用。在下方找到您首选的操作系统。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Install/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Install/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker 安装]]></title>
            <description><![CDATA[yum-utils提供了yum-config-manager 效用，并device-mapper-persistent-data和lvm2由需要 devicemapper存储驱动程序]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Install/docker_1_install.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Install/docker_1_install.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker 问题讨论]]></title>
            <description><![CDATA[关于 Docker 遇到的困惑、问题、故障的解决方案。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Issue/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Issue/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Logging Overview]]></title>
            <link>https://smoothies.com.cn/docker-docs/Docker/Logging/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Logging/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker 高级操作]]></title>
            <description><![CDATA[容器的基本组成部分之一是名称空间。名称空间的概念是限制进程可以看到和访问系统的某些部分，比如其他网络接口或进程。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Manage/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Manage/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker 资源清理]]></title>
            <description><![CDATA[删除镜像]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Manage/docker_clean.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Manage/docker_clean.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker 容器隔离与限制]]></title>
            <description><![CDATA[Cgroups 就是 Linux 内核中用来为进程设置资源限制的一个重要功能。 有意思的是，Google 的工程师在 2006 年发起这项特性的时候，曾将它命名为“进程容 器”（process container）。实际上，在 Google 内部，“容器”这个术语长期以来都被用于 形容被 Cgroups 限制过的进程组。后来 Google 的工程师们说，他们的 KVM 虚拟机也运行在 Borg 所管理的“容器”里，其实也是运行在 Cgroups“容器”当中。
这和我们今天说的 Docker 容器差别很大。 Linux Cgroups 的全称是 Linux Control Group。它最主要的作用，就是限制一个进程组能 够使用的资源上限，包括 CPU、内存、磁盘、网络带宽等等。 此外，Cgroups 还能够对进程进行优先级设置、审计，以及将进程挂起和恢复等操作。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Manage/docker_container_isolation_and_restrictions.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Manage/docker_container_isolation_and_restrictions.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker 监控 Overview]]></title>
            <link>https://smoothies.com.cn/docker-docs/Docker/Monitor/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Monitor/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker 网络 Overview]]></title>
            <link>https://smoothies.com.cn/docker-docs/Docker/Network/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Network/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker 容器应用总是丢包如何分析？]]></title>
            <description><![CDATA[容器化后的应用程序，问题分析结合：]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Network/docker_analyze_the_packet_loss.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Network/docker_analyze_the_packet_loss.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker 配置 DNS]]></title>
            <description><![CDATA[docker容器配置dns解析地址，我知道的有以下几种办法（优先级从高到低）：]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Network/docker_config_DNS.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Network/docker_config_DNS.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Registry Overview]]></title>
            <description><![CDATA[Docker registry  是命名 Docker镜像的 存储和分发系统。同一个image可能有多个不同的版本，由它们的标签标识。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Registry/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Registry/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[harbor部署入门指南]]></title>
            <description><![CDATA[tags: registry]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Registry/harbor_get_started_guide.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Registry/harbor_get_started_guide.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Podman 部署私有镜像仓库]]></title>
            <description><![CDATA[tags: registry]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Registry/podman_deploy_private_registry.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Registry/podman_deploy_private_registry.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker registry 仓库搭建并配置证书]]></title>
            <description><![CDATA[Docker Registry，它是所有仓库（包括共有和私有）以及工作流的中央Registry]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Registry/docker_registry_1_deploy.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Registry/docker_registry_1_deploy.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker 部署 registry UI]]></title>
            <description><![CDATA[在推送镜像中出现错误，因为client与Registry交互默认将采用https访问，但我们在install Registry时并未配置指定任何tls相关的key和crt文件，https将无法访问。因此， 我们需要配置客户端的Insecure Registry选项（另一种解决方案需要配置Registry的证书）。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Registry/docker_registry_2_deploy_UI.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Registry/docker_registry_2_deploy_UI.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Centos 7.9 harbor 部署镜像仓库]]></title>
            <description><![CDATA[tags: registry
]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Registry/centos_7.9_deploy_harbor_practice.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Registry/centos_7.9_deploy_harbor_practice.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker 安全 Overview]]></title>
            <link>https://smoothies.com.cn/docker-docs/Docker/Security/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Security/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Volume]]></title>
            <description><![CDATA[在这里插入图片描述]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Storage/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Storage/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker Device Mapper 简介]]></title>
            <description><![CDATA[Device Mapper 是 linux 的内核用来将块设备映射到虚拟块设备的 framework，它支持许多高级卷管理技术。docker 的 devicemapper 存储驱动程序利用此框架的自动精简配置(thin provisioning) 和快照功能来管理 docker 镜像和容器。本文将 Device Mapper 存储驱动称为 devicemapper，将它的内核框架称为 Device Mapper。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Storage/docker_storage_1_docker_Device_Mapper_introduce.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Storage/docker_storage_1_docker_Device_Mapper_introduce.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker  storage 驱动 devicemapper 配置]]></title>
            <description><![CDATA[devicemapper 存储驱动是 RHEL, CentOS 和 Oracle Linux 系统上唯一一个支持 Docker EE 和 Commercially Supported Docker Engine (CS-Engine) 的存储驱动，具体参考 Product compatibility matrix.]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Storage/docker_storage_2_docker_drive_devicemapper_config.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Storage/docker_storage_2_docker_drive_devicemapper_config.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker Thin Provisioning 实践]]></title>
            <description><![CDATA[上一篇我们介绍了 Device Mapper 框架的技术原理及其核心概念，下面，我们用一系列的命令来演示一下 Device Mapper 的 Thin Provisioning Snapshot 是怎么玩的。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Storage/docker_storage_3_docker_thin_provisioning.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Storage/docker_storage_3_docker_thin_provisioning.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[docker devicemapper 扩容]]></title>
            <description><![CDATA[查看当前大小: 100G]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Storage/docker_storage_4_docker_devicemapper_scale.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Storage/docker_storage_4_docker_devicemapper_scale.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Docker NFS volume 创建与使用]]></title>
            <description><![CDATA[tags: 存储]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/Storage/docker_storage_5_nfs_volume.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/Storage/docker_storage_5_nfs_volume.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[原理]]></title>
            <description><![CDATA[LXC 为 Linux Container 的简写。可以提供轻量级的虚拟化，以便隔离进程和资源，而且不需要提供指令解释机制以及全虚拟化的其他复杂性。相当于 C++ 中的 NameSpace。容器有效地将由单个操作系统管理的资源划分到孤立的组中，以更好地在孤立的组之间平衡有冲突的资源使用需求。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/原理/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/原理/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[容器技术概述]]></title>
            <description><![CDATA[软件应用程序通常依赖于运行时环境提供的其他库、配置文件或服务。软件应用程序的传统运行环境是物理主机或虚拟机，应用程序依赖项作为主机的一部分安装。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/原理/docker_Container_technology_overview.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/原理/docker_Container_technology_overview.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[容器架构概述]]></title>
            <description><![CDATA[近年来，容器迅速流行起来。然而，容器背后的技术已经存在了相对较长的时间。2001年，Linux引入了一个名为VServer的项目。VServer 是第一次尝试在高度隔离的单个服务器内运行完整的进程集。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/原理/Container_architecture_overview.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/原理/Container_architecture_overview.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[入门]]></title>
            <description><![CDATA[在这里插入图片描述]]></description>
            <link>https://smoothies.com.cn/docker-docs/Docker/docker_1_start.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Docker/docker_1_start.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Podman Overview]]></title>
            <link>https://smoothies.com.cn/docker-docs/Podman/README.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Podman/README.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Podman 部署私有镜像仓库]]></title>
            <description><![CDATA[tags: registry
]]></description>
            <link>https://smoothies.com.cn/docker-docs/Podman/podman_deploy_private_registry.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Podman/podman_deploy_private_registry.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Podman 快速入门]]></title>
            <description><![CDATA[Podman是一个无守护进程的开源 Linux 原生工具，旨在使用开放容器倡议 ( OCI )容器和容器映像轻松查找、运行、构建、共享和部署应用程序。Podman 提供了任何使用过 Docker容器引擎的人都熟悉的命令行界面 (CLI) 。大多数用户可以简单地将 Docker 别名为 Podman（别名 docker=podman），由谷歌，Redhat、微软、IBM、Intel、思科联合成立的组织（OCI）容器运行时（runc、crun、runv 等）制定了一系列容器运行的规范。主要是由RedHat推动，完成Docker所有的功能和新扩展功能，并且对docker的问题进行了改良：包括不需要守护程序或访问有root权限的组；容器架构基于fork/exec模型创建容器，更加安全可靠；所以是更先进、高效和安全的下一代容器容器工具。Podman是该工具套件的核心，用来替换Docker中了大多数子命令（RUN，PUSH，PULL等）。Podman无需守护进程，使用用户命名空间来模拟容器中的root，无需连接到具有root权限的套接字保证容器的体系安全。]]></description>
            <link>https://smoothies.com.cn/docker-docs/Podman/podman_start.html</link>
            <guid isPermaLink="true">https://smoothies.com.cn/docker-docs/Podman/podman_start.html</guid>
            <dc:creator><![CDATA[Zong Xun]]></dc:creator>
        </item>
    </channel>
</rss>